1. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_core.v
2. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_decipher_block.v
3. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_encipher_block.v
4. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_inv_sbox.v
5. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_key_mem.v
6. Executing Verilog-2005 frontend: ./designs/src/aes_secworks/aes_sbox.v
7. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib
8. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_INVBUF_RVT_FF_nldm_220122.lib
9. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_OA_RVT_FF_nldm_211120.lib
10. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_SIMPLE_RVT_FF_nldm_211120.lib
11. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_SEQ_RVT_FF_nldm_220123.lib
12. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib
13. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_INVBUF_RVT_FF_nldm_220122.lib
14. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_OA_RVT_FF_nldm_211120.lib
15. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_SIMPLE_RVT_FF_nldm_211120.lib
16. Executing Liberty frontend: ./objects/asap7/aes_secworks/base/lib/asap7sc7p5t_SEQ_RVT_FF_nldm_220123.lib
17. Executing Verilog-2005 frontend: /home/zhz/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v
Using ABC speed script.
Extracting clock period from SDC file: ./results/asap7/aes_secworks/base/clock_period.txt
Setting clock period to 10
18. Executing HIERARCHY pass (managing design hierarchy).
19. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_core'.
19.1. Analyzing design hierarchy..
19.2. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_sbox'.
19.3. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_key_mem'.
Warning: Replacing memory \key_mem with list of registers. See ./designs/src/aes_secworks/aes_key_mem.v:140
19.4. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_decipher_block'.
19.5. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_encipher_block'.
19.6. Analyzing design hierarchy..
19.7. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_inv_sbox'.
19.8. Analyzing design hierarchy..
19.9. Analyzing design hierarchy..
20. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module aes_encipher_block because it contains processes (run 'proc' command first).
Warning: Ignoring module aes_decipher_block because it contains processes (run 'proc' command first).
Warning: Ignoring module aes_key_mem because it contains processes (run 'proc' command first).
Warning: Ignoring module aes_sbox because it contains processes (run 'proc' command first).
Warning: Ignoring module aes_core because it contains processes (run 'proc' command first).
Warning: Ignoring module aes_inv_sbox because it contains processes (run 'proc' command first).
21. Executing RTLIL backend.
Warnings: 7 unique messages, 7 total
End of script. Logfile hash: 8ec7fc346e, CPU: user 1.24s system 0.46s, MEM: 72.93 MB peak
Yosys 0.51+101 (git sha1 314842d2a, clang++ 18.1.8 -fPIC -O3)
Time spent: 74% 12x read_liberty (1 sec), 19% 1x hierarchy (0 sec), ...
Elapsed time: 0:01.86[h:]min:sec. CPU time: user 1.32 sys 0.47 (96%). Peak memory: 76080KB.
